package com.example.crudspringboot.Controller;import com.example.crudspringboot.Entity.Users;import com.example.crudspringboot.Services.UserServiceIMPL.UsersImplementation;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.*;import java.util.List;//user controller@Controller@RequestMapping("/api")public class usersController {    @Autowired    private UsersImplementation implementation;    @GetMapping    @RequestMapping(value = "/user", method = RequestMethod.GET)    public ResponseEntity<?> prueba() {        List<Users> listUsers = this.implementation.getUser();        return ResponseEntity.ok(listUsers);    }    @PostMapping    @RequestMapping(value = "/createdUser", method = RequestMethod.POST)    public ResponseEntity<?> createUser(@RequestBody Users Users) {        Users usercreate = this.implementation.createdUser(Users);        return ResponseEntity.status(HttpStatus.CREATED).body(usercreate);    }    @PutMapping    @RequestMapping(value = "/updateUser/{id}", method = RequestMethod.PUT)    public ResponseEntity<?> updateUser(@PathVariable Long id, @RequestBody Users user) {        Users updateUsers = this.implementation.updateUser(id, user);        return ResponseEntity.status(HttpStatus.CREATED).body(updateUsers);    }    @GetMapping    @RequestMapping(value = "/searchUser/{id}", method = RequestMethod.GET)    public ResponseEntity<?> searchUser(@PathVariable Long id) {        Users Users = this.implementation.searchUser(id);        return ResponseEntity.ok(Users);    }    @DeleteMapping    @RequestMapping(value = "/deleteUser/{id}", method = RequestMethod.DELETE)    public ResponseEntity<?> deleteUser(@PathVariable Long id) {        this.implementation.deleteUser(id);        return ResponseEntity.ok().build();    }}